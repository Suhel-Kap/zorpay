/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyUSD, MyUSDInterface } from "../MyUSD";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "allowance",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ERC20InsufficientAllowance",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "allowance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InsufficientBalance",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidApprover",
    inputs: [
      {
        name: "approver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidReceiver",
    inputs: [
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidSender",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidSpender",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x6080346102e2576040906001600160401b0390808301828111828210176101ee5783526005815260209164135e5554d160da1b838301528351848101818110838211176101ee578552600390818152621554d160ea1b858201528351908382116101ee578254916001958684811c941680156102d8575b888510146102c2578190601f94858111610271575b50889085831160011461020f57600092610204575b505060001982861b1c191690861b1783555b80519384116101ee5760049586548681811c911680156101e4575b828210146101cf57838111610189575b50809285116001146101205750938394918492600095610115575b50501b92600019911b1c19161790555b5161075690816102e88239f35b0151935038806100f8565b92919084601f1981168860005285600020956000905b8983831061016f5750505010610155575b50505050811b019055610108565b01519060f884600019921b161c1916905538808080610147565b858701518955909701969485019488935090810190610136565b87600052816000208480880160051c8201928489106101c6575b0160051c019087905b8281106101ba5750506100dd565b600081550187906101ac565b925081926101a3565b602288634e487b7160e01b6000525260246000fd5b90607f16906100cd565b634e487b7160e01b600052604160045260246000fd5b0151905038806100a0565b90889350601f19831691876000528a6000209260005b8c82821061025b5750508411610243575b505050811b0183556100b2565b015160001983881b60f8161c19169055388080610236565b8385015186558c97909501949384019301610225565b90915085600052886000208580850160051c8201928b86106102b9575b918a91869594930160051c01915b8281106102aa57505061008b565b600081558594508a910161029c565b9250819261028e565b634e487b7160e01b600052602260045260246000fd5b93607f1693610076565b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146104ee57508163095ea7b31461044457816318160ddd1461042557816323b872dd1461032e578163313ce5671461031257816340c10f191461026657816370a082311461022f57816395d89b411461010e57508063a9059cbb146100de5763dd62ed3e1461009357600080fd5b346100da57806003193601126100da57806020926100af610611565b6100b761062c565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100da57806003193601126100da576020906101076100fd610611565b6024359033610642565b5160018152f35b8383346100da57816003193601126100da5780519082845460018160011c9060018316928315610225575b6020938484108114610212578388529081156101f657506001146101a1575b505050829003601f01601f191682019267ffffffffffffffff84118385101761018e575082918261018a9252826105c8565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106101e25750505050830101858080610158565b8054888601830152930192849082016101cc565b60ff1916878501525050151560051b8401019050858080610158565b634e487b7160e01b895260228a52602489fd5b91607f1691610139565b5050346100da5760203660031901126100da5760209181906001600160a01b03610257610611565b16815280845220549051908152f35b9190503461030e578060031936011261030e57610281610611565b6001600160a01b031691602435919083156102f957600254908382018092116102e6575084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a380f35b634e487b7160e01b865260119052602485fd5b84602492519163ec442f0560e01b8352820152fd5b8280fd5b5050346100da57816003193601126100da576020905160128152f35b905082346104225760603660031901126104225761034a610611565b61035261062c565b916044359360018060a01b03831680835260016020528683203384526020528683205491600019830361038e575b602088610107898989610642565b8683106103f65781156103df5733156103c85750825260016020908152868320338452815291869020908590039055829061010787610380565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b80fd5b5050346100da57816003193601126100da576020906002549051908152f35b90503461030e578160031936011261030e5761045e610611565b6024359033156104d7576001600160a01b03169182156104c057508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b8490843461030e578260031936011261030e578260035460018160011c90600183169283156105be575b6020938484108114610212578388529081156101f6575060011461056857505050829003601f01601f191682019267ffffffffffffffff84118385101761018e575082918261018a9252826105c8565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106105aa5750505050830101858080610158565b805488860183015293019284908201610594565b91607f1691610518565b6020808252825181830181905290939260005b8281106105fd57505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016105db565b600435906001600160a01b038216820361062757565b600080fd5b602435906001600160a01b038216820361062757565b916001600160a01b0380841692831561070757169283156106ee57600090838252816020526040822054908382106106bc575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fdfea2646970667358221220b8835f8293435adec28a2c9074b549a8b97ebbb104ecc62ae8f816c8f26cb0f264736f6c63430008190033";

type MyUSDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyUSDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyUSD__factory extends ContractFactory {
  constructor(...args: MyUSDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<MyUSD> {
    return super.deploy(overrides || {}) as Promise<MyUSD>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MyUSD {
    return super.attach(address) as MyUSD;
  }
  override connect(signer: Signer): MyUSD__factory {
    return super.connect(signer) as MyUSD__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyUSDInterface {
    return new utils.Interface(_abi) as MyUSDInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MyUSD {
    return new Contract(address, _abi, signerOrProvider) as MyUSD;
  }
}
