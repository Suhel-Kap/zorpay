/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SmartAccount, SmartAccountInterface } from "../SmartAccount";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "eip712Domain",
    inputs: [],
    outputs: [
      {
        name: "fields",
        type: "bytes1",
        internalType: "bytes1",
      },
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "version",
        type: "string",
        internalType: "string",
      },
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "verifyingContract",
        type: "address",
        internalType: "address",
      },
      {
        name: "salt",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "extensions",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "execute",
    inputs: [
      {
        name: "transaction",
        type: "tuple",
        internalType: "struct SmartAccount.Transaction",
        components: [
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
          {
            name: "value",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "data",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "deadline",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "nonceUsed",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "EIP712DomainChanged",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "TransactionExecuted",
    inputs: [
      {
        name: "nonce",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "to",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
      {
        name: "deadline",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "result",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "CallFailed",
    inputs: [
      {
        name: "revertData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
  },
  {
    type: "error",
    name: "DeadlineExpired",
    inputs: [
      {
        name: "deadline",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ECDSAInvalidSignature",
    inputs: [],
  },
  {
    type: "error",
    name: "ECDSAInvalidSignatureLength",
    inputs: [
      {
        name: "length",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ECDSAInvalidSignatureS",
    inputs: [
      {
        name: "s",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidShortString",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSignature",
    inputs: [],
  },
  {
    type: "error",
    name: "NonceUsed",
    inputs: [
      {
        name: "nonce",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "StringTooLong",
    inputs: [
      {
        name: "str",
        type: "string",
        internalType: "string",
      },
    ],
  },
] as const;

const _bytecode =
  "0x6101806040523480156200001257600080fd5b5060405162001088380380620010888339810160408190526200003591620001b8565b60408051808201825260068152655a6f7270617960d01b602080830191909152825180840190935260018352603160f81b90830152906200007882600062000133565b610120526200008981600162000133565b61014052815160208084019190912060e052815190820120610100524660a0526200011760e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0526001600160a01b031661016052620003d0565b600060208351101562000153576200014b836200016c565b905062000166565b816200016084826200028f565b5060ff90505b92915050565b600080829050601f81511115620001a3578260405163305a27a960e01b81526004016200019a91906200035b565b60405180910390fd5b8051620001b082620003ab565b179392505050565b600060208284031215620001cb57600080fd5b81516001600160a01b0381168114620001e357600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200021557607f821691505b6020821081036200023657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200028a57600081815260208120601f850160051c81016020861015620002655750805b601f850160051c820191505b81811015620002865782815560010162000271565b5050505b505050565b81516001600160401b03811115620002ab57620002ab620001ea565b620002c381620002bc845462000200565b846200023c565b602080601f831160018114620002fb5760008415620002e25750858301515b600019600386901b1c1916600185901b17855562000286565b600085815260208120601f198616915b828110156200032c578886015182559484019460019091019084016200030b565b50858210156200034b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b818110156200038a578581018301518582016040015282016200036c565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620002365760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161016051610c4c6200043c6000396000818160a7015261024a015260006104e6015260006104b4015260006105e6015260006105be01526000610519015260006105430152600061056d0152610c4c6000f3fe60806040526004361061003f5760003560e01c80630d9006611461004457806384b0196e1461006d5780638da5cb5b1461009557806394d0d3a6146100e1575b600080fd5b610057610052366004610922565b610121565b6040516100649190610a07565b60405180910390f35b34801561007957600080fd5b5061008261040a565b6040516100649796959493929190610a21565b3480156100a157600080fd5b506100c97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610064565b3480156100ed57600080fd5b506101116100fc366004610ab7565b60026020526000908152604090205460ff1681565b6040519015158152602001610064565b606042846080013510156101535760405163bc3088ef60e01b8152608085013560048201526024015b60405180910390fd5b833560009081526002602052604090205460ff161561018857604051631be5cb2f60e01b81528435600482015260240161014a565b60006102467fed396873ef30438f129eeb7d2f45463b50eabf1199f611946df9996e814b55e186356101c06040890160208a01610ad0565b60408901356101d260608b018b610af9565b6040516101e0929190610b47565b60405190819003812061022b959493929160808d01359060200195865260208601949094526001600160a01b039290921660408501526060840152608083015260a082015260c00190565b60405160208183030381529060405280519060200120610450565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166102b28286868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061048392505050565b6001600160a01b0316146102d957604051638baa579f60e01b815260040160405180910390fd5b6000806102ec6040880160208901610ad0565b6001600160a01b0316604088013561030760608a018a610af9565b604051610315929190610b47565b60006040518083038185875af1925050503d8060008114610352576040519150601f19603f3d011682016040523d82523d6000602084013e610357565b606091505b50915091508161037c578060405163a5fa8d2b60e01b815260040161014a9190610a07565b8635600081815260026020908152604091829020805460ff191660011790557f48e5a5fdaf0e258ee950bfff5e20c3d79ed27aeebd86b45c5482d6f364701bc292916103cd91908b01908b01610ad0565b60408a01356103df60608c018c610af9565b8c60800135876040516103f89796959493929190610b57565b60405180910390a19695505050505050565b60006060806000806000606061041e6104ad565b6104266104df565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b600061047d61045d61050c565b8360405161190160f01b8152600281019290925260228201526042902090565b92915050565b6000806000806104938686610637565b9250925092506104a38282610684565b5090949350505050565b60606104da7f00000000000000000000000000000000000000000000000000000000000000006000610741565b905090565b60606104da7f00000000000000000000000000000000000000000000000000000000000000006001610741565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561056557507f000000000000000000000000000000000000000000000000000000000000000046145b1561058f57507f000000000000000000000000000000000000000000000000000000000000000090565b6104da604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600080600083516041036106715760208401516040850151606086015160001a610663888285856107ec565b95509550955050505061067d565b50508151600091506002905b9250925092565b600082600381111561069857610698610bc6565b036106a1575050565b60018260038111156106b5576106b5610bc6565b036106d35760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156106e7576106e7610bc6565b036107085760405163fce698f760e01b81526004810182905260240161014a565b600382600381111561071c5761071c610bc6565b0361073d576040516335e2f38360e21b81526004810182905260240161014a565b5050565b606060ff831461075b57610754836108bb565b905061047d565b81805461076790610bdc565b80601f016020809104026020016040519081016040528092919081815260200182805461079390610bdc565b80156107e05780601f106107b5576101008083540402835291602001916107e0565b820191906000526020600020905b8154815290600101906020018083116107c357829003601f168201915b5050505050905061047d565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561082757506000915060039050826108b1565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561087b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166108a7575060009250600191508290506108b1565b9250600091508190505b9450945094915050565b606060006108c8836108fa565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f81111561047d57604051632cd44ac360e21b815260040160405180910390fd5b60008060006040848603121561093757600080fd5b833567ffffffffffffffff8082111561094f57600080fd5b9085019060a0828803121561096357600080fd5b9093506020850135908082111561097957600080fd5b818601915086601f83011261098d57600080fd5b81358181111561099c57600080fd5b8760208285010111156109ae57600080fd5b6020830194508093505050509250925092565b6000815180845260005b818110156109e7576020818501810151868301820152016109cb565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610a1a60208301846109c1565b9392505050565b60ff60f81b881681526000602060e081840152610a4160e084018a6109c1565b8381036040850152610a53818a6109c1565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015610aa557835183529284019291840191600101610a89565b50909c9b505050505050505050505050565b600060208284031215610ac957600080fd5b5035919050565b600060208284031215610ae257600080fd5b81356001600160a01b0381168114610a1a57600080fd5b6000808335601e19843603018112610b1057600080fd5b83018035915067ffffffffffffffff821115610b2b57600080fd5b602001915036819003821315610b4057600080fd5b9250929050565b8183823760009101908152919050565b8781526001600160a01b03871660208201526040810186905260c0606082018190528101849052838560e0830137600060e085830101526000601f19601f860116820184608084015260e08382030160a0840152610bb860e08201856109c1565b9a9950505050505050505050565b634e487b7160e01b600052602160045260246000fd5b600181811c90821680610bf057607f821691505b602082108103610c1057634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200eb0cb33c2902ddf4e38b47e58ad2be5f0439d845a3f330a34d2c4d3df74fe3564736f6c63430008140033";

type SmartAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SmartAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SmartAccount__factory extends ContractFactory {
  constructor(...args: SmartAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<SmartAccount> {
    return super.deploy(_owner, overrides || {}) as Promise<SmartAccount>;
  }
  override getDeployTransaction(
    _owner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): SmartAccount {
    return super.attach(address) as SmartAccount;
  }
  override connect(signer: Signer): SmartAccount__factory {
    return super.connect(signer) as SmartAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SmartAccountInterface {
    return new utils.Interface(_abi) as SmartAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SmartAccount {
    return new Contract(address, _abi, signerOrProvider) as SmartAccount;
  }
}
